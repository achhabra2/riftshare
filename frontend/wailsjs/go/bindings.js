// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
const go = {
  "main": {
    "App": {
      /**
       * CancelWormholeRequest
       * @returns {Promise<void>} 
       */
      "CancelWormholeRequest": () => {
        return window.go.main.App.CancelWormholeRequest();
      },
      /**
       * GetCurrentVersion
       * @returns {Promise<string>}  - Go Type: string
       */
      "GetCurrentVersion": () => {
        return window.go.main.App.GetCurrentVersion();
      },
      /**
       * GetDownloadsFolder
       * @returns {Promise<string>}  - Go Type: string
       */
      "GetDownloadsFolder": () => {
        return window.go.main.App.GetDownloadsFolder();
      },
      /**
       * GetLogPath
       * @returns {Promise<string>}  - Go Type: string
       */
      "GetLogPath": () => {
        return window.go.main.App.GetLogPath();
      },
      /**
       * GetNotificationsParam
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "GetNotificationsParam": () => {
        return window.go.main.App.GetNotificationsParam();
      },
      /**
       * GetOverwriteParam
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "GetOverwriteParam": () => {
        return window.go.main.App.GetOverwriteParam();
      },
      /**
       * OpenDirectoryDialog
       * @returns {Promise<Array<string>|Error>}  - Go Type: []string
       */
      "OpenDirectoryDialog": () => {
        return window.go.main.App.OpenDirectoryDialog();
      },
      /**
       * OpenFile
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "OpenFile": (arg1) => {
        return window.go.main.App.OpenFile(arg1);
      },
      /**
       * OpenFilesDialog
       * @returns {Promise<Array<string>|Error>}  - Go Type: []string
       */
      "OpenFilesDialog": () => {
        return window.go.main.App.OpenFilesDialog();
      },
      /**
       * ReceiveFile
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "ReceiveFile": (arg1) => {
        return window.go.main.App.ReceiveFile(arg1);
      },
      /**
       * SelectedFilesSend
       * @returns {Promise<void>} 
       */
      "SelectedFilesSend": () => {
        return window.go.main.App.SelectedFilesSend();
      },
      /**
       * SendDirectory
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "SendDirectory": (arg1) => {
        return window.go.main.App.SendDirectory(arg1);
      },
      /**
       * SendFile
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "SendFile": (arg1) => {
        return window.go.main.App.SendFile(arg1);
      },
      /**
       * SetDownloadsFolder
       * @returns {Promise<string>}  - Go Type: string
       */
      "SetDownloadsFolder": () => {
        return window.go.main.App.SetDownloadsFolder();
      },
      /**
       * SetNotificationsParam
       * @param {boolean} arg1 - Go Type: bool
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "SetNotificationsParam": (arg1) => {
        return window.go.main.App.SetNotificationsParam(arg1);
      },
      /**
       * SetOverwriteParam
       * @param {boolean} arg1 - Go Type: bool
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "SetOverwriteParam": (arg1) => {
        return window.go.main.App.SetOverwriteParam(arg1);
      },
      /**
       * ShowErrorDialog
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<void>} 
       */
      "ShowErrorDialog": (arg1) => {
        return window.go.main.App.ShowErrorDialog(arg1);
      },
      /**
       * UpdateCheckUI
       * @returns {Promise<void>} 
       */
      "UpdateCheckUI": () => {
        return window.go.main.App.UpdateCheckUI();
      },
      /**
       * UpdateSendProgress
       * @param {number} arg1 - Go Type: int64
       * @param {number} arg2 - Go Type: int64
       * @returns {Promise<void>} 
       */
      "UpdateSendProgress": (arg1, arg2) => {
        return window.go.main.App.UpdateSendProgress(arg1, arg2);
      },
    },
  },

};
export default go;
